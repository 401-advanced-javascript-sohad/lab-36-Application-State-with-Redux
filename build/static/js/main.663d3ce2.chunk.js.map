{"version":3,"sources":["store/action.js","components/status.js","components/catagore-counter.js","app.js","store/index.js","index.js"],"names":["initialState","categories","catName","displayName","description","products","categoryType","name","price","inventoryCount","activeCategories","render","type","payload","reset","mapDispatchToProps","connect","state","action","props","map","data","idx","onClick","categoryAassociation","key","normalizedName","console","log","reducers","combineReducers","category","activeCategoriesNew","product","store","createStore","composeWithDevTools","root","document","getElementById","ReactDOM"],"mappings":"uPACIA,EAAe,CAGjBC,WAAY,CACV,CAAEC,QAAS,WAAYC,YAAa,QAASC,YAAa,sDAC1D,CAAEF,QAAS,WAAYC,YAAa,UAAWC,YAAa,+FAC5D,CAAEF,QAAS,WAAYC,YAAa,QAASC,YAAa,yEAM5DC,SAAU,CACR,CAAEC,aAAc,QAASC,KAAM,SAAUH,YAAa,0DAA2DI,MAAO,IAAMC,eAAgB,IAC9I,CAAEH,aAAc,UAAWC,KAAM,UAAWH,YAAa,0EAA2EI,MAAO,GAAIC,eAAgB,IAC/J,CAAEH,aAAc,QAASC,KAAM,QAASH,YAAa,gEAAiEI,MAAO,GAAIC,eAAgB,KAKnJC,iBAAkB,IA+DPC,EAAS,SAACR,GACrB,MAAO,CACLS,KAAM,SACNC,QAASV,IAOAW,EAAQ,WACnB,MAAO,CACLF,KAAM,UC9DJG,EAAqB,CAAEJ,SAAQG,SACtBE,eANS,SAAAC,GAAK,MAAK,CAChCC,OAAQD,EAAMC,OACdR,iBAAkBO,EAAMC,OAAOR,oBAIOK,EAAzBC,EA3BA,SAAAG,GACb,OACE,iCACGA,EAAMT,iBAEN,4BACES,EAAMD,OAAOb,SAASe,KAAI,SAACC,EAAMC,GAChC,OAAO,wBAAIC,QAAS,kBAAMJ,EAAMR,OAAOU,EAAKG,uBAAuBC,IAAKH,GACrED,EAAKG,qBADD,MAC0BH,EAAKd,KAD/B,MACwCc,EAAKjB,YAD7C,KAC4DiB,EAAKb,MADjE,KAC0Ea,EAAKZ,oBAK1F,4BAAQc,QAASJ,EAAML,OAAvB,YCkBAC,EAAqB,CAAEJ,SAAQG,SACtBE,eALS,SAAAC,GAAK,MAAK,CAChCC,OAAQD,EAAMC,UAIwBH,EAAzBC,EA5BK,SAAAG,GAElB,OACE,iCAEE,4BACGA,EAAMD,OAAOjB,WAAWmB,KAAI,SAACC,EAAMC,GAClC,OAAO,wBAAIC,QAAS,kBAAMJ,EAAMR,OAAOU,EAAKlB,cAAcsB,IAAKH,GAC5DD,EAAKlB,YADD,MACiBkB,EAAKK,eADtB,MACyCL,EAAKjB,qBCZhD,WAAAe,GAEb,OADAQ,QAAQC,IAAI,YAAaT,GAEvB,oCAEE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,cCNFU,EAASC,0BAAgB,CAACZ,OJ0Bf,WAAmC,IAAlCD,EAAiC,uDAAzBjB,EAAckB,EAAW,uCAGzCN,EAAkBM,EAAlBN,KAAMC,EAAYK,EAAZL,QAEZ,OAAQD,GACR,IAAK,SAEH,IAAIF,EAAmBO,EAAMP,iBAGzBT,EAAagB,EAAMhB,WAAWmB,KAAI,SAAAW,GACpC,OAAIA,EAAS5B,cAAgBU,EAEpBH,EAAmBqB,EAAS5B,YAE9B4B,KAYLC,EAAsBtB,EACtBL,EAAWY,EAAMZ,SAASe,KAAI,SAAAa,GAChC,OAAIA,EAAQ3B,eAAiBO,EACpBoB,EAAQ3B,aAAe0B,EAEzBC,KAET,MAAO,CAAEvB,mBAAkBT,aAAYI,YAEzC,IAAK,QACH,OAAOL,EACT,QACE,OAAOiB,MI7DIiB,EAHNC,sBAAaN,EAASO,iCCM/B,IAAMC,EAAOC,SAASC,eAAe,QACrCC,IAAS7B,OAAO,mBAThB,WACE,OACE,kBAAC,IAAD,CAAUuB,MAAOA,GACf,kBAAC,EAAD,SAMU,MAAUG,K","file":"static/js/main.663d3ce2.chunk.js","sourcesContent":["/* eslint-disable no-case-declarations */\nlet initialState = {\n\n\n  categories: [\n    { catName: 'clothes ', displayName: 'Dress', description: 'is a garment traditionally worn by women or girls ' },\n    { catName: 'clothes ', displayName: 'Jackets', description: ' is generally lighter, tighter-fitting, and less insulating than a coat, which is outerwear' },\n    { catName: 'clothes ', displayName: 'Shoes', description: 's an item of footwear intended to protect and comfort the human foot' }],\n  \n  \n  \n    \n\n  products: [\n    { categoryType: 'Dress', name: 'Halter', description: 'top is a type of sleeveless shirt similar to a tank top', price: 1000, inventoryCount: 40 },\n    { categoryType: 'Jackets', name: 'trucker', description: 'typically has sleeves, and fastens in the front or slightly on the side', price: 30, inventoryCount: 50 },\n    { categoryType: 'Shoes', name: 'heels', description: 'a solid, raised base or support of leather, wood, rubber, etc', price: 50, inventoryCount: 60 }],\n\n\n  \n  \n  activeCategories: '',\n\n};\n\n\n\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\n\nexport default (state = initialState, action) => {\n    \n    \n  let { type, payload } = action;\n  \n  switch (type) {\n  case 'RENDER':\n\n    let activeCategories = state.activeCategories;\n\n\n    let categories = state.categories.map(category => {\n      if (category.displayName === payload) {\n\n        return activeCategories = category.displayName;\n      }\n      return category;\n    });\n            \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    let activeCategoriesNew = activeCategories;\n    let products = state.products.map(product => {\n      if (product.categoryType === payload) {\n        return product.categoryType = activeCategoriesNew;\n      }\n      return product;\n    });\n    return { activeCategories, categories, products };\n\n  case 'RESET':\n    return initialState;\n  default:\n    return state;\n  }\n\n};\n\n\n\n\n\n\nexport const render = (displayName) => {\n  return {\n    type: 'RENDER',\n    payload: displayName,\n  };\n};\n\n\n\n\nexport const reset = () => {\n  return {\n    type: 'RESET',\n  };\n};\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { render, reset } from '../store/action.js';\n\n\n\n\nconst Status = props => {\n  return (\n    <article>\n      {props.activeCategories}\n\n      {<ul>\n        {props.action.products.map((data, idx) => {\n          return <li onClick={() => props.render(data.categoryAassociation)} key={idx}>\n            {data.categoryAassociation},  {data.name},  {data.description}, {data.price}, {data.inventoryCount}\n          </li>;\n        })\n        }\n      </ul>}\n      <button onClick={props.reset}>Show</button>\n    </article>\n  );\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nconst mapStateToProps = state => ({\n  action: state.action,\n  activeCategories: state.action.activeCategories,\n});\n\nconst mapDispatchToProps = { render, reset };\nexport default connect(mapStateToProps, mapDispatchToProps)(Status);","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { render, reset } from '../store/action.js';\n\n\n\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\nconst ShowProduct = props => {\n//   console.log('propsssssss',props);\n  return (\n    <article>\n\n      <ul>\n        {props.action.categories.map((data, idx) => {\n          return <li onClick={() => props.render(data.displayName)} key={idx}>\n            {data.displayName},  {data.normalizedName},  {data.description}\n          </li>;\n        })\n        }\n\n      </ul>\n\n\n    </article>\n  );\n};\n\n\n\n\nconst mapStateToProps = state => ({\n  action: state.action,\n});\n\nconst mapDispatchToProps = { render, reset };\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowProduct);","/* eslint-disable no-unused-vars */\nimport React from 'react';\n// import Header from '../src/modal/header.js';\n// import Footer from './modal/footer.js';\n\nimport Status from '../src/components/status.js';\nimport ShowProduct from '../src/components/catagore-counter.js';\n\nexport default props => {\n  console.log('propsssss', props);\n  return (\n    <>\n      {/* <Header /> */}\n      <ShowProduct />\n      <Status />\n      {/* <Footer /> */}\n    </>\n  );\n};\n","import { createStore, combineReducers } from 'redux';\n\nimport { composeWithDevTools} from 'redux-devtools-extension';\n\nimport action from'./action.js';\n\n\n\nlet reducers=combineReducers({action});\nconst store = () =>{\n  return createStore (reducers,composeWithDevTools());\n\n};\nexport default store();\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app.js';\n\nimport store from './store/index.js';\n\nfunction Main() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n}\n\nconst root = document.getElementById('root');\nReactDOM.render(<Main />, root);"],"sourceRoot":""}